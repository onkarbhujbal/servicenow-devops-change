name: Test

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      instance-url: 
        description: 'ServiceNow Instance URL'
        required: true
      devops-integration-user-name:
        description: 'Devops Integration User Name'
        required: false
      devops-integration-user-password:
        description: 'Devops Integration User Password'
        required: false
      devops-integration-token:
        description: 'Devops Integration Token'
        required: false
      tool-id:
        description: 'Orchestration Tool Id'
        required: true
      job-name:
        description: 'Display Name of the Job'
        required: true
      context-github:
        description: 'Github Context'
        required: true
      timeout:
        description: 'The max. time in seconds to wait until the action should fail.'
        required: false
        default: '3600'
      interval:
        description: 'The time in seconds to wait between trying the API.'
        required: false
        default: '100'
      change-request:
        description: 'The customized inputs to create change with the requested details.'
        required: true
      changeCreationTimeOut:
        description: 'The max. time in seconds to wait until change created.'
        required: false
        default: '3600'
      abortOnChangeCreationFailure:
        description: 'This value will be used to resume or abort the pipeline if the change is not created within the mentioned time period in changeCreationTimeOut. '
        required: false
        default: true
      abortOnChangeStepTimeout:
        description: 'This value will be used to resume or abort the pipeline after a timeout has occurred in case a change step is still in a pending state.'
        required: false
        default: true
      deployment-gate:
        description: 'The customized inputs to process deployment gate job related change.'
        required: false

jobs:
  deploy:
    name: Deploy
    #needs: <upstream job>
    runs-on: ubuntu-latest
    steps:     
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v4.0.0
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWORD }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Deploy'
          change-request: '{"setCloseCode":"true","autoCloseChange":true,"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }}" >> $GITHUB_OUTPUT
